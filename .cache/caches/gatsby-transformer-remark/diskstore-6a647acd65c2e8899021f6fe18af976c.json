{"expireTime":9007200807735730000,"key":"transformer-remark-markdown-html-abe84caa5014dec1f0d8aaecb5a2fa37--","val":"<p>Following on from <a href=\"https://medium.com/@mikeeeeeeey/create-react-app-tailwind-css-feat-postcss-631d9e33ba8c\">my previous post regarding setting up the popular Create React App and Tailwind</a>, I‚Äôve been playing around with next.js made by the amazing people over at <a href=\"https://zeit.co\">Zeit</a>. I‚Äôm still on my Atomic CSS tip for rapid building of UIs, so naturally the first thing I wanted to do was hook up my favourite CSS Toolkit.</p>\n<p><strong>N.B:</strong> This isn‚Äôt a post about whether to use Create React App or next.js, or which is better‚Ää ‚Äî ‚Äädifferent tools for different jobs. With that out of the way, let‚Äôs get to hooking them up.</p>\n<p>Firstly, install next.js by following the <a href=\"https://nextjs.org/docs\">installation instructions</a>. Then we just need to install a few extra dependencies for Tailwind:</p>\n<pre><code class=\"language-bash\">npm install @zeit/next-css tailwindcss autoprefixer\n</code></pre>\n<p>Then initialise Tailwind with a new configuration file in the root of your project. I like to add the <code>.config</code> suffix to these files, so I know what they are for:</p>\n<pre><code class=\"language-bash\">npx tailwind init tailwind.config.js\n</code></pre>\n<p>You‚Äôll need to do the same for PostCSS so we can use it to transform the Tailwind directives into pure CSS‚Ää‚Äî‚Ääagain, in the root of your project, create a file called <code>postcss.config.js</code> and add this code (taken straight from the <a href=\"https://tailwindcss.com/docs/installation#webpack\">Tailwind docs</a>):</p>\n<pre><code class=\"language-javascript\">const tailwindcss = require(\"tailwindcss\");\n\nmodule.exports = {\n  plugins: [tailwindcss(\"./tailwind.config.js\"), require(\"autoprefixer\")]\n};\n</code></pre>\n<p>Nearly there! Now we need to set up our CSS ‚Äúentry point‚Äù. Create <code>style.css</code> and paste in the following:</p>\n<pre><code class=\"language-css\">@tailwind preflight;\n@tailwind utilities;\n\n/* Your custom CSS here */\n</code></pre>\n<p>We now just need to tell next.js that we want to add a CSS pipeline. This is done by creating <code>next.config.js</code> as detailed in the <a href=\"https://github.com/zeit/next-plugins/tree/master/packages/next-css\">example repo</a>:</p>\n<pre><code class=\"language-javascript\">const withCSS = require(\"@zeit/next-css\");\n\nmodule.exports = withCSS();\n</code></pre>\n<p>Finally to make use of this file, just make sure that in your <code>pages/index.js</code> you have:</p>\n<pre><code class=\"language-javascript\">import \"../style.css\";\n</code></pre>\n<p>And you are good to go.</p>\n<p>If you now run <code>npm run dev</code> and visit your site, you will see a CSS file being added in the document‚Äôs head containing the generated Tailwind CSS üéâ</p>\n<h2>Next steps</h2>\n<p>As detailed in the Tailwind docs, now we have PostCSS processing set up, we can take advantage of the many PostCSS plugins available!</p>"}